@startuml
allowmixing

skinparam database {
    BorderColor pink
    BackgroundColor purple
    ArrowColor purple
    FontColor pink
}

skinparam rectangle {
    BorderColor purple
    BackgroundColor lightpink
    ArrowColor purple
}

skinparam class {
    BorderColor purple
    BackgroundColor pink
    ArrowColor purple
    AttributeIconSize 0
}

skinparam note {
    BorderColor darkslateblue
    BackgroundColor #90c0f0
    FontColor darkslateblue
}

component Application {
    package com.valva.proyectointegrador #d9a4ff {

        package repository {
            interface "IRepository<T>"{
                + insertarNuevo(T t) : T
                + consultarTodos() : List<T>
                + consultarPorId(Integer id) : T
                + actualizar(T t) : T
                + eliminar(Integer id) : void
            }

            package impl {
                class "OdontologoRepositoryH2<Odontologo>"
                class "PacienteRepositoryH2<Paciente>"
                class "DomicilioRepositoryH2<Domicilio>"
            }

            class ConfiguracionJDBC {
                + obtenerConexionConBD() : Connection
            }

            component JDBC #ffa6df
        }

        package service {

            interface CRUDService {
                + buscar(Integer id) : T
                + darDeAlta(T t) : T
                + actualizar(T t) : T
                + consultarTodos() : List<T>
                + eliminar(Integer id) : void
            }

            class PacienteService implements CRUDService
            class TurnoService implements CRUDService
            class OdontologoService implements CRUDService
            TurnoService -l> OdontologoService
            TurnoService -r> PacienteService
        }

        package controller {
                    interface CRUDController {
                        + buscar(Integer id) : ResponseEntity<T>
                        + darDeAlta(T t) : ResponseEntity<T>
                        + actualizar(T t) : ResponseEntity<T>
                        + consultarTodos() : ResponseEntity<List<T>>
                        + eliminar(Integer id) : void
                    }
                    class PacienteController implements CRUDController
                    class OdontologoController  implements CRUDController
                    class TurnoController implements CRUDController
                }

        package model {
            rectangle Odontologo
            rectangle Paciente
            rectangle Domicilio
            rectangle Turno
        }

        controller *-- service
        impl .> model : crea/usa
        service o--- impl
        "IRepository<T>" <|.. "OdontologoRepositoryH2<Odontologo>"
        "IRepository<T>" <|.. "PacienteRepositoryH2<Paciente>"
        "IRepository<T>" <|.. "DomicilioRepositoryH2<Domicilio>"
        "IRepository<T>" .> JDBC : usa
        "OdontologoRepositoryH2<Odontologo>" o-- ConfiguracionJDBC
        "PacienteRepositoryH2<Paciente>" o-- ConfiguracionJDBC
        "DomicilioRepositoryH2<Domicilio>" o-- ConfiguracionJDBC
    }

}
@enduml